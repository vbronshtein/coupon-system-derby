{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/companies/companies.component.css","webpack:///./src/app/companies/companies.component.html","webpack:///./src/app/companies/companies.component.ts","webpack:///./src/app/companies/company-edit/company-edit.component.css","webpack:///./src/app/companies/company-edit/company-edit.component.html","webpack:///./src/app/companies/company-edit/company-edit.component.ts","webpack:///./src/app/companies/company-list/company-item/company-item.component.css","webpack:///./src/app/companies/company-list/company-item/company-item.component.html","webpack:///./src/app/companies/company-list/company-item/company-item.component.ts","webpack:///./src/app/companies/company-list/company-list.component.css","webpack:///./src/app/companies/company-list/company-list.component.html","webpack:///./src/app/companies/company-list/company-list.component.ts","webpack:///./src/app/companies/company-start/company-start.component.css","webpack:///./src/app/companies/company-start/company-start.component.html","webpack:///./src/app/companies/company-start/company-start.component.ts","webpack:///./src/app/companies/company.model.ts","webpack:///./src/app/companies/company.service.ts","webpack:///./src/app/customers/customer-edit/customer-edit.component.css","webpack:///./src/app/customers/customer-edit/customer-edit.component.html","webpack:///./src/app/customers/customer-edit/customer-edit.component.ts","webpack:///./src/app/customers/customer-list/customer-item/customer-item.component.css","webpack:///./src/app/customers/customer-list/customer-item/customer-item.component.html","webpack:///./src/app/customers/customer-list/customer-item/customer-item.component.ts","webpack:///./src/app/customers/customer-list/customer-list.component.css","webpack:///./src/app/customers/customer-list/customer-list.component.html","webpack:///./src/app/customers/customer-list/customer-list.component.ts","webpack:///./src/app/customers/customer-start/customer-start.component.css","webpack:///./src/app/customers/customer-start/customer-start.component.html","webpack:///./src/app/customers/customer-start/customer-start.component.ts","webpack:///./src/app/customers/customer.model.ts","webpack:///./src/app/customers/customer.service.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/shared/data-storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router'\r\nimport { CompaniesComponent } from \"./companies/companies.component\";\r\nimport { CustomersComponent } from \"./customers/customers.component\";\r\nimport { CompanyEditComponent } from \"./companies/company-edit/company-edit.component\";\r\nimport { CompanyStartComponent } from \"./companies/company-start/company-start.component\";\r\nimport { CustomerStartComponent } from \"./customers/customer-start/customer-start.component\";\r\nimport { CustomerEditComponent } from \"./customers/customer-edit/customer-edit.component\";\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: '/companies', pathMatch: 'full' },\r\n    {\r\n        path: 'companies', component: CompaniesComponent, children: [\r\n            { path: '', component: CompanyStartComponent },\r\n            { path: 'new', component: CompanyEditComponent },\r\n            { path: ':id', component: CompanyEditComponent },\r\n        ]\r\n    },\r\n    {\r\n        path: 'customers', component: CustomersComponent, children: [\r\n            { path: '', component: CustomerStartComponent },\r\n            { path: 'new', component: CustomerEditComponent },\r\n            { path: ':id', component: CustomerEditComponent },\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'coupon-sys';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { CompaniesComponent } from './companies/companies.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CompanyListComponent } from './companies/company-list/company-list.component';\nimport { CustomerListComponent } from './customers/customer-list/customer-list.component';\nimport { CompanyItemComponent } from './companies/company-list/company-item/company-item.component';\nimport { CustomerItemComponent } from './customers/customer-list/customer-item/customer-item.component';\nimport { CompanyService } from './companies/company.service';\nimport { CompanyEditComponent } from './companies/company-edit/company-edit.component';\nimport { CompanyStartComponent } from './companies/company-start/company-start.component';\nimport { DataStorageService } from './shared/data-storage.service';\nimport { CustomerEditComponent } from './customers/customer-edit/customer-edit.component';\nimport { CustomerStartComponent } from './customers/customer-start/customer-start.component';\nimport { CustomerService } from './customers/customer.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompaniesComponent,\n    CustomersComponent,\n    HeaderComponent,\n    CompanyListComponent,\n    CustomerListComponent,\n    CompanyItemComponent,\n    CustomerItemComponent,\n    CompanyEditComponent,\n    CompanyStartComponent,\n    CustomerEditComponent,\n    CustomerStartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpModule\n  ],\n  providers: [CompanyService,\n              CustomerService,\n              DataStorageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-company-list></app-company-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.component.html',\n  styleUrls: ['./companies.component.css']\n})\nexport class CompaniesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"input.ng-invalid.ng-touched,\\r\\ntextarea.ng-invalid.ng-touched {\\r\\n  border: 1px solid red;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-primary\\\" \\n            type=\\\"button\\\" \\n            (click)=\\\"onManage()\\\" \\n            *ngIf=\\\"editMode\\\">Manage Company</button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n\\n      <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" \\n                  id=\\\"name\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"name\\\" \\n                  ngModel \\n                  required \\n                  [readonly]=\\\"editMode\\\">\\n          </div>\\n          <div class=\\\"col-xs-12 form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"text\\\" \\n                  id=\\\"password\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"password\\\" \\n                  ngModel \\n                  required \\n                  [readonly]=\\\"!manageMode\\\">\\n          </div>\\n          <div class=\\\"col-xs-12 form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"email\\\" \\n                  id=\\\"email\\\" \\n                  class=\\\"form-control\\\" \\n                  name=\\\"email\\\" \\n                  ngModel \\n                  required \\n                  [readonly]=\\\"!manageMode\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid || !manageMode\\\">{{ editMode ? 'Update' :\\n              'Add' }}</button>\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" [disabled]=\\\"!editMode\\\">Delete</button>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\" [disabled]=\\\"!manageMode\\\">Clear</button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { CompanyService } from '../company.service';\nimport { Subscription } from 'rxjs';\nimport { Company } from '../company.model';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-company-edit',\n  templateUrl: './company-edit.component.html',\n  styleUrls: ['./company-edit.component.css']\n})\nexport class CompanyEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f') companyForm: NgForm;\n  editMode = false;\n  manageMode = true;\n  subscription: Subscription;\n  editedItemIndex: number;\n  editedItem: Company;\n\n  constructor(private companyService: CompanyService,\n    private dataStorageService: DataStorageService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.subscription = this.companyService.startedEditing\n      .subscribe(\n        (index: number) => {\n          this.editedItemIndex = index;\n          this.editMode = true;\n          this.editedItem = this.companyService.getCompany(index);\n          this.companyForm.setValue({\n            name: this.editedItem.name,\n            password: this.editedItem.password,\n            email: this.editedItem.email\n          });\n          this.manageMode = false;\n        }\n      );\n\n  }\n\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newCompany = new Company(value.name, value.password, value.email);\n    if (this.editMode) {\n      this.editedItem.password = newCompany.password;\n      this.editedItem.email = newCompany.email;\n      this.dataStorageService.updateCompany(this.editedItem);\n      this.router.navigate(['../'], { relativeTo: this.route });\n    } else {\n      this.dataStorageService.addCompany(newCompany);\n      form.reset();\n    }\n    this.editMode = false;\n    \n  }\n\n  onClear() {\n    this.companyForm.reset();\n  }\n\n  onManage() {\n    this.manageMode = true;\n  }\n\n  onDelete() {\n    this.dataStorageService.deleteCompany(this.editedItem);\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<a\\n  style=\\\"cursor: pointer;\\\"\\n  [routerLink]=\\\"[index]\\\"\\n  routerLinkActive=\\\"active\\\"\\n  class=\\\"list-group-item clearfix\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ company.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\"> Id: {{ company.id }}</p>\\n  </div>\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Company } from '../../company.model';\n\n@Component({\n  selector: 'app-company-item',\n  templateUrl: './company-item.component.html',\n  styleUrls: ['./company-item.component.css']\n})\nexport class CompanyItemComponent implements OnInit {\n\n  @Input() company: Company;\n  @Input() index: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onNewCompany()\\\">New Company</button>\\n  </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <app-company-item\\n      *ngFor=\\\"let company of companies; let i = index\\\"\\n      [company]=\\\"company\\\"\\n      [index]=\\\"i\\\"\\n      (click)=\\\"onEditItem(i)\\\"></app-company-item>\\n  </div>\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Company } from '../company.model';\nimport { Subscription } from 'rxjs';\nimport { CompanyService } from '../company.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\n\n@Component({\n  selector: 'app-company-list',\n  templateUrl: './company-list.component.html',\n  styleUrls: ['./company-list.component.css']\n})\nexport class CompanyListComponent implements OnInit, OnDestroy {\n  companies: Company[];\n  subscription: Subscription;\n\n  constructor(private companyService: CompanyService,\n    private dataStorageService: DataStorageService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.dataStorageService.getCompanies();\n    this.companyService.companiesChanged.subscribe(\n      (companies: Company[]) => {\n        this.companies = companies;\n      }\n    );\n  }\n\n  onNewCompany() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n\n  onEditItem(index: number) {\n    this.companyService.startedEditing.next(index);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Please select a Company!</h3>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company-start',\n  templateUrl: './company-start.component.html',\n  styleUrls: ['./company-start.component.css']\n})\nexport class CompanyStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Company {\r\n\r\n    constructor(\r\n        public name?: string, public password?: string, public email?: string, public id?: number, public coupons?: String) {\r\n    }\r\n}","import { Company } from \"./company.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class CompanyService {\r\n\r\n    constructor() { }\r\n\r\n    companiesChanged = new Subject<Company[]>();\r\n    startedEditing = new Subject<number>();\r\n\r\n    private companies: Company[];\r\n\r\n    getCompany(index: number) {\r\n        return this.companies[index];\r\n    }\r\n\r\n    setCompany(companies: Company[]) {\r\n        this.companies = companies;\r\n        this.companiesChanged.next(this.companies.slice());\r\n    }\r\n\r\n    addCompany(company: Company) {\r\n        this.companies.push(company);\r\n        this.companiesChanged.next(this.companies.slice());\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <button class=\\\"btn btn-primary\\\" \\n              type=\\\"button\\\" \\n              (click)=\\\"onManage()\\\" \\n              *ngIf=\\\"editMode\\\">Manage Customer</button>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n  \\n        <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12 form-group\\\">\\n              <label for=\\\"custName\\\">Name</label>\\n              <input type=\\\"text\\\" \\n                    id=\\\"custName\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"custName\\\" \\n                    ngModel \\n                    required \\n                    [readonly]=\\\"editMode\\\">\\n            </div>\\n            <div class=\\\"col-xs-12 form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"text\\\" \\n                    id=\\\"password\\\" \\n                    class=\\\"form-control\\\" \\n                    name=\\\"password\\\" \\n                    ngModel \\n                    required \\n                    [readonly]=\\\"!manageMode\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid || !manageMode\\\">{{ editMode ? 'Update' :\\n                'Add' }}</button>\\n              <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDelete()\\\" [disabled]=\\\"!editMode\\\">Delete</button>\\n              <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\" [disabled]=\\\"!manageMode\\\">Clear</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Customer } from '../customer.model';\nimport { CustomerService } from '../customer.service';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: ['./customer-edit.component.css']\n})\nexport class CustomerEditComponent implements OnInit {\n\n  @ViewChild('f') customerForm: NgForm;\n  editMode = false;\n  manageMode = true;\n  subscription: Subscription;\n  editedItemIndex: number;\n  editedItem: Customer;\n\n  constructor(private customerService: CustomerService,\n    private dataStorageService: DataStorageService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.subscription = this.customerService.startedEditing\n      .subscribe(\n        (index: number) => {\n          this.editedItemIndex = index;\n          this.editMode = true;\n          this.editedItem = this.customerService.getCustomer(index);\n          this.customerForm.setValue({\n            custName: this.editedItem.custName,\n            password: this.editedItem.password\n          });\n          this.manageMode = false;\n        }\n      );\n\n  }\n\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newCompany = new Customer(value.custName, value.password);\n    if (this.editMode) {\n      this.editedItem.password = newCompany.password;\n      this.dataStorageService.updateCustomer(this.editedItem);\n      this.router.navigate(['../'], { relativeTo: this.route });\n    } else {\n      this.dataStorageService.addCustomer(newCompany);\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.customerForm.reset();\n  }\n\n  onManage() {\n    this.manageMode = true;\n  }\n\n  onDelete() {\n    this.dataStorageService.deleteCustomer(this.editedItem);\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a\\n  style=\\\"cursor: pointer;\\\"\\n  [routerLink]=\\\"[index]\\\"\\n  routerLinkActive=\\\"active\\\"\\n  class=\\\"list-group-item clearfix\\\">\\n  <div class=\\\"pull-left\\\">\\n    <h4 class=\\\"list-group-item-heading\\\">{{ customer.custName }}</h4>\\n    <p class=\\\"list-group-item-text\\\">Id: {{ customer.id }}</p>\\n  </div>\\n</a>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Customer } from '../../customer.model';\n\n@Component({\n  selector: 'app-customer-item',\n  templateUrl: './customer-item.component.html',\n  styleUrls: ['./customer-item.component.css']\n})\nexport class CustomerItemComponent implements OnInit {\n\n  @Input() customer: Customer;\n  @Input() index: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"onNewCustomer()\\\">New Customer</button>\\n    </div>\\n  </div>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <app-customer-item\\n        *ngFor=\\\"let customer of customers; let i = index\\\"\\n        [customer]=\\\"customer\\\"\\n        [index]=\\\"i\\\"\\n        (click)=\\\"onEditItem(i)\\\"></app-customer-item>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Customer } from '../customer.model';\nimport { Subscription } from 'rxjs';\nimport { CustomerService } from '../customer.service';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n  customers: Customer[];\n  subscription: Subscription;\n\n  constructor(private customerService: CustomerService,\n    private dataStorageService: DataStorageService,\n    private router: Router,\n    private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.subscription = this.dataStorageService.getCustomers();\n    this.customerService.customersChanged.subscribe(\n      (customers: Customer[]) => {\n        this.customers = customers;\n      }\n    );\n  }\n\n  onNewCustomer() {\n    this.router.navigate(['new'], { relativeTo: this.route });\n  }\n\n  onEditItem(index: number) {\n    this.customerService.startedEditing.next(index);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3>Please select a Customer!</h3>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-start',\n  templateUrl: './customer-start.component.html',\n  styleUrls: ['./customer-start.component.css']\n})\nexport class CustomerStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Customer {\r\n\r\n    constructor(\r\n        public custName?: string, public password?: string, public id?: number, ) {\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Customer } from \"./customer.model\";\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n    constructor() { }\r\n\r\n    customersChanged = new Subject<Customer[]>();\r\n    startedEditing = new Subject<number>();\r\n\r\n    private customers: Customer[];\r\n\r\n    getCustomer(index: number) {\r\n        return this.customers[index];\r\n    }\r\n\r\n    setCompany(customers: Customer[]) {\r\n        this.customers = customers;\r\n        this.customersChanged.next(this.customers.slice());\r\n    }\r\n\r\n    addCompany(customer: Customer) {\r\n        this.customers.push(customer);\r\n        this.customersChanged.next(this.customers.slice());\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <app-customer-list></app-customer-list>\\n  </div>\\n  <div class=\\\"col-md-7\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">Admin Coupon System</a>\\n    </div>\\n\\n    <div class=\\\"nav navbar-default\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/companies\\\">Companies</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/customers\\\">Customers</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { CompanyService } from \"../companies/company.service\";\r\nimport { Company } from \"../companies/company.model\";\r\nimport { Customer } from \"../customers/customer.model\";\r\nimport { CustomerService } from \"../customers/customer.service\";\r\nimport swal from 'sweetalert2';\r\n\r\n@Injectable()\r\nexport class DataStorageService {\r\n    constructor(private http: Http,\r\n        private companyService: CompanyService,\r\n        private customerService: CustomerService) { }\r\n    \r\n    private defaultFailMessage: string = 'Something doing wrong , Please contact your system administrator';\r\n\r\n\r\n    getCompanies() {\r\n        return this.http.get(\"http://localhost:8080/admin/getallcompanies\")\r\n        \r\n        .subscribe(\r\n            (resp) => {\r\n                let companies: Company[] = resp.json();\r\n                this.companyService.setCompany(companies);\r\n\r\n            },\r\n            (err: Response) => {\r\n                if(err.status == 501) {\r\n                    this.failAlert(err.text())\r\n                 } else { \r\n                    this.failAlert(this.defaultFailMessage);\r\n                 }\r\n            }\r\n        );\r\n    }\r\n\r\n    addCompany(company: Company) {\r\n        return this.http.post(\"http://localhost:8080/admin/createcompany\", company)\r\n            .subscribe(\r\n                (resp) => {\r\n                    if(resp.status == 200) {\r\n                        this.successAlert(\"Company was created successfully\")\r\n                    }\r\n                    this.getCompanies();\r\n                },\r\n                (err: Response) => {\r\n                    if(err.status == 501) {\r\n                        this.failAlert(err.text())\r\n                     } else { \r\n                        this.failAlert(this.defaultFailMessage);\r\n                     }\r\n                }\r\n            );\r\n    }\r\n\r\n    updateCompany(company: Company) {\r\n        return this.http.put(\"http://localhost:8080/admin/updatecompany\", company)\r\n            .subscribe(\r\n                (resp) => {\r\n                    if(resp.status == 200) {\r\n                        this.successAlert(\"Company was updated successfully\")\r\n                    }\r\n                    this.getCompanies();\r\n                },\r\n                (err: Response) => {\r\n                    if(err.status == 501) {\r\n                        this.failAlert(err.text())\r\n                     } else { \r\n                        this.failAlert(this.defaultFailMessage);\r\n                     }\r\n                }\r\n            );\r\n    }\r\n\r\n    deleteCompany(company: Company) {\r\n        return this.http.delete(\"http://localhost:8080/admin/removecompany/\" + company.id)\r\n            .subscribe(\r\n                (resp) => {\r\n                    if(resp.status == 200) {\r\n                        this.successAlert(\"Company was removed successfully\")\r\n                    }\r\n                    this.getCompanies();\r\n                },\r\n                (err: Response) => {\r\n                    if(err.status == 501) {\r\n                        this.failAlert(err.text())\r\n                     } else { \r\n                        this.failAlert(this.defaultFailMessage);\r\n                     }\r\n                }\r\n            )\r\n    }\r\n\r\n    getCustomers() {\r\n        return this.http.get(\"http://localhost:8080/admin/getallcustomers\").subscribe(\r\n            (resp) => {\r\n                let customers: Customer[] = resp.json();\r\n                this.customerService.setCompany(customers);\r\n            },\r\n            (err: Response) => {\r\n                if(err.status == 501) {\r\n                    this.failAlert(err.text())\r\n                 } else { \r\n                    this.failAlert(this.defaultFailMessage);\r\n                 }\r\n            }\r\n        );\r\n    }\r\n\r\n    addCustomer(customer: Customer) {\r\n        return this.http.post(\"http://localhost:8080/admin/createcustomer\", customer)\r\n            .subscribe(\r\n                (resp) => {\r\n                    if(resp.status == 200) {\r\n                        this.successAlert(\"Customer was created successfully\")\r\n                    }\r\n                    this.getCustomers();\r\n                },\r\n                (err: Response) => {\r\n                    if(err.status == 501) {\r\n                        this.failAlert(err.text())\r\n                     } else { \r\n                        this.failAlert(this.defaultFailMessage);\r\n                     }\r\n                }\r\n            );\r\n    }\r\n\r\n    updateCustomer(customer: Customer) {\r\n        return this.http.put(\"http://localhost:8080/admin/updatecustomer\", customer)\r\n            .subscribe(\r\n                (resp) => {\r\n                    if(resp.status == 200) {\r\n                        this.successAlert(\"Customer was updated successfully\")\r\n                    }\r\n                    this.getCustomers();\r\n                },\r\n                (err: Response) => {\r\n                    if(err.status == 501) {\r\n                        this.failAlert(err.text())\r\n                     } else { \r\n                        this.failAlert(this.defaultFailMessage);\r\n                     }\r\n                }\r\n            );\r\n    }\r\n\r\n    deleteCustomer(customer: Customer) {\r\n        return this.http.delete(\"http://localhost:8080/admin/removecustomer/\" + customer.id)\r\n            .subscribe(\r\n                (resp) => {\r\n                    if(resp.status == 200) {\r\n                        this.successAlert(\"Customer was removed successfully\")\r\n                    }\r\n                    this.getCustomers();\r\n                },\r\n                (err: Response) => {\r\n                    if(err.status == 501) {\r\n                        this.failAlert(err.text())\r\n                     } else { \r\n                        this.failAlert(this.defaultFailMessage);\r\n                     }\r\n                }\r\n            )\r\n    }\r\n\r\n    successAlert(message: string) {\r\n        swal({\r\n            position: 'center',\r\n            type: 'success',\r\n            title: message,\r\n          })\r\n    }\r\n    \r\n    failAlert(message ) {\r\n        swal({\r\n            type: 'error',\r\n            title: 'Oops...',\r\n            text: message,\r\n          })\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}